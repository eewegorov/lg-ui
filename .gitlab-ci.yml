stages:
  - Snapshot
  - Release

Snapshot Docker image:
  stage: Snapshot
  before_script:
    - echo -n "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" "${CI_REGISTRY}" --password-stdin
    - printenv
  script:
    - >
      docker build
      --label "org.opencontainers.image.title=${CI_PROJECT_TITLE}"
      --label "org.opencontainers.image.url=${CI_PROJECT_URL}"
      --label "org.opencontainers.image.created=${CI_JOB_STARTED_AT}"
      --label "org.opencontainers.image.revision=${CI_COMMIT_SHORT_SHA}"
      --tag "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
      .
    - docker tag "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}" "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}"
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH}"
  rules:
    # Should be started only on branches matched to particular regexp
    - if: '$CI_COMMIT_BRANCH =~ /^CR-[0-9]+.*$/'

Release Docker image:
  stage: Release
  before_script:
    - echo -n "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" "${CI_REGISTRY}" --password-stdin
    - printenv
  script:
    - docker pull "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
    - docker tag "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}" "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
  rules:
    # Should be started only on tagging
    - if: '$CI_COMMIT_TAG'
